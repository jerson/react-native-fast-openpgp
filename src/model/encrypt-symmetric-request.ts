// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { FileHints } from '../model/file-hints';
import { KeyOptions } from '../model/key-options';


export class EncryptSymmetricRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EncryptSymmetricRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEncryptSymmetricRequest(bb:flatbuffers.ByteBuffer, obj?:EncryptSymmetricRequest):EncryptSymmetricRequest {
  return (obj || new EncryptSymmetricRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEncryptSymmetricRequest(bb:flatbuffers.ByteBuffer, obj?:EncryptSymmetricRequest):EncryptSymmetricRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EncryptSymmetricRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

passphrase():string|null
passphrase(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
passphrase(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

options(obj?:KeyOptions):KeyOptions|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new KeyOptions()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

fileHints(obj?:FileHints):FileHints|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new FileHints()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startEncryptSymmetricRequest(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, messageOffset, 0);
}

static addPassphrase(builder:flatbuffers.Builder, passphraseOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, passphraseOffset, 0);
}

static addOptions(builder:flatbuffers.Builder, optionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, optionsOffset, 0);
}

static addFileHints(builder:flatbuffers.Builder, fileHintsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, fileHintsOffset, 0);
}

static endEncryptSymmetricRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
